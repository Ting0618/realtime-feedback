version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2 # 使用较新且稳定的版本
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.2 # 确保与 Zookeeper 版本兼容
    container_name: kafka
    ports:
      - "9092:9092" # For clients outside docker (like our Spring Boot app)
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1 # 在 Kafka 集群中，每个 Broker 必须有唯一的 ID，用于标识。
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181' # 指定 Kafka 连接 ZooKeeper 的地址
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092 # Kafka 容器内部监听所有接口的 9092 端口
      # 定义 Kafka 监听器的安全协议映射
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT # 映射 PLAINTEXT 监听器使用 PLAINTEXT 协议
      # 指定 Kafka 向客户端（生产者和消费者）公布的监听地址。客户端会通过这些地址连接 Kafka
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092 # 告诉内部客户端通过服务名kafka和端口9092连接
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT # broker 间通信也用这个监听器
      # 设置 Kafka 内部主题 __consumer_offsets（存储消费者偏移量）的副本因子为 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # 设置消费者组初始重新平衡的延迟时间为 0 毫秒，表示立即开始重新平衡
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1 # Confluent specific
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1 # Confluent specific
      # 设置 Kafka 事务状态日志的最小同步副本数（ISR，In-Sync Replicas）为 1。ISR 表示与领导者保持同步的副本数，
      # 设为 1 表示只要领导者副本可用即可，适合单节点环境。
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      # 设置 Kafka 事务状态日志的副本因子为 1。事务状态日志用于支持 Kafka 的事务功能，单节点环境下设为 1。
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  # 你的 Spring Boot 应用程序服务
  realtime-feedback: # 你可以给服务取任何名字
    build: . # 告诉 Docker Compose 在当前目录 ('.') 寻找 Dockerfile 并构建镜像
    container_name: realtime-feedback-container
    ports:
      - "8080:8080" # 将主机的 8080 端口映射到容器的 8080 端口
    depends_on:
      - kafka # 确保 Kafka 启动后再启动你的应用
    environment:
      # Spring Boot 应用连接 Kafka 的配置
      # 关键：你的应用程序需要连接到 kafka:29092
      SPRING_KAFKA_BOOTSTRAP_SERVERS: 'kafka:9092'
      # 如果你的 Spring Boot 应用需要其他环境变量，在这里添加
      # 例如，数据库连接信息等
      # SPRING_DATASOURCE_URL: jdbc:postgresql://your-db-host:5432/your-db
      # SPRING_DATASOURCE_USERNAME: user
      # SPRING_DATASOURCE_PASSWORD: password
    restart: unless-stopped # 或 on-failure，根据需要配置重启策略